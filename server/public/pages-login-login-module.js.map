{"version":3,"sources":["webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/login/login.module.ts","webpack:///./src/app/services/login.service.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["module.exports = \"<div class=\\\"login-box\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"login-logo\\\">\\r\\n      <a> Simple ChatApp</a>\\r\\n    </div>\\r\\n    <div class=\\\"card-body login-card-body\\\" *ngIf=\\\"!regclick\\\">\\r\\n      <form\\r\\n        #loginuser=\\\"ngForm\\\"\\r\\n        (ngSubmit)=\\\"loginUser()\\\"\\r\\n        class=\\\"form-horizontal\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n      >\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"control-label col-md-4\\\" for=\\\"username\\\">Username*</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input\\r\\n              type=\\\"test\\\"\\r\\n              required\\r\\n              [(ngModel)]=\\\"login.username\\\"\\r\\n              #username=\\\"ngModel\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"username\\\"\\r\\n              placeholder=\\\"Enter username\\\"\\r\\n              name=\\\"username\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"help-block\\\"\\r\\n              *ngIf=\\\"username.invalid && username.touched\\\"\\r\\n              >Username is Required</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"control-label col-md-4\\\" for=\\\"password\\\">Password*</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input\\r\\n              type=\\\"password\\\"\\r\\n              required\\r\\n              [(ngModel)]=\\\"login.password\\\"\\r\\n              #password=\\\"ngModel\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"password\\\"\\r\\n              placeholder=\\\"Enter password\\\"\\r\\n              name=\\\"password\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"help-block\\\"\\r\\n              *ngIf=\\\"password.errors?.required && password.touched\\\"\\r\\n              >Password is Required</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <button\\r\\n              [disabled]=\\\"loading || loginuser.invalid\\\"\\r\\n              type=\\\"submit\\\"\\r\\n              class=\\\"btn btn-primary btn-block text-center\\\"\\r\\n            >\\r\\n              <i *ngIf=\\\"loading\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>&nbsp; Login\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 text-center\\\">\\r\\n            <a\\r\\n              href=\\\"javascript:void(0)\\\"\\r\\n              class=\\\"btn btn-link\\\"\\r\\n              (click)=\\\"openReg()\\\"\\r\\n              >Create Account</a\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body login-card-body\\\" *ngIf=\\\"regclick\\\">\\r\\n      <form\\r\\n        #reguser=\\\"ngForm\\\"\\r\\n        (ngSubmit)=\\\"regUser()\\\"\\r\\n        class=\\\"form-horizontal\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n      >\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"control-label col-md-4\\\" for=\\\"first_name\\\"\\r\\n            >First name*</label\\r\\n          >\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              required\\r\\n              [(ngModel)]=\\\"reg.first_name\\\"\\r\\n              #first_name=\\\"ngModel\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"first_name\\\"\\r\\n              placeholder=\\\"Enter first name\\\"\\r\\n              name=\\\"first_name\\\"\\r\\n            />\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"first_name.invalid && first_name.touched\\\"\\r\\n              >First name is Required</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"control-label col-md-4\\\" for=\\\"last_name\\\"\\r\\n            >Last name*</label\\r\\n          >\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              required\\r\\n              [(ngModel)]=\\\"reg.last_name\\\"\\r\\n              #last_name=\\\"ngModel\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"last_name\\\"\\r\\n              placeholder=\\\"Enter last name\\\"\\r\\n              name=\\\"last_name\\\"\\r\\n            />\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"last_name.invalid && last_name.touched\\\"\\r\\n              >Last name is Required</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"control-label col-md-4\\\" for=\\\"email\\\">Email*</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input\\r\\n              type=\\\"email\\\"\\r\\n              required\\r\\n              [(ngModel)]=\\\"reg.email\\\"\\r\\n              #email=\\\"ngModel\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"email\\\"\\r\\n              placeholder=\\\"Enter email\\\"\\r\\n              name=\\\"email\\\"\\r\\n            />\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"email.invalid && email.touched\\\"\\r\\n              >Email is Required</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"control-label col-md-4\\\" for=\\\"username\\\">Username*</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input\\r\\n              type=\\\"test\\\"\\r\\n              required\\r\\n              [(ngModel)]=\\\"reg.username\\\"\\r\\n              #username=\\\"ngModel\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"username\\\"\\r\\n              placeholder=\\\"Enter username\\\"\\r\\n              name=\\\"username\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"help-block\\\"\\r\\n              *ngIf=\\\"username.invalid && username.touched\\\"\\r\\n              >Username is Required</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"control-label col-md-4\\\" for=\\\"mobile_no\\\">Mobile*</label>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n              <input\\r\\n                type=\\\"test\\\"\\r\\n                required\\r\\n                [(ngModel)]=\\\"reg.mobile_no\\\"\\r\\n                #mobile_no=\\\"ngModel\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"mobile_no\\\"\\r\\n                placeholder=\\\"Enter mobile no.\\\"\\r\\n                name=\\\"mobile_no\\\"\\r\\n              />\\r\\n              <span\\r\\n                class=\\\"help-block\\\"\\r\\n                *ngIf=\\\"mobile_no.invalid && mobile_no.touched\\\"\\r\\n                >Mobile no is Required</span\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"control-label col-md-4\\\" for=\\\"password\\\">Password*</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input\\r\\n              type=\\\"password\\\"\\r\\n              required\\r\\n              [(ngModel)]=\\\"reg.password\\\"\\r\\n              #password=\\\"ngModel\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"password\\\"\\r\\n              placeholder=\\\"Enter password\\\"\\r\\n              name=\\\"password\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"help-block\\\"\\r\\n              *ngIf=\\\"password.errors?.required && password.touched\\\"\\r\\n              >Password is Required</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <button\\r\\n              [disabled]=\\\"loading || reguser.invalid\\\"\\r\\n              type=\\\"submit\\\"\\r\\n              class=\\\"btn btn-primary btn-block text-center\\\"\\r\\n            >\\r\\n              <i *ngIf=\\\"loading\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>&nbsp;\\r\\n              Registration\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12 text-center\\\">\\r\\n            <a\\r\\n              href=\\\"javascript:void(0)\\\"\\r\\n              class=\\\"btn btn-link\\\"\\r\\n              (click)=\\\"openReg()\\\"\\r\\n              >Back to Login</a\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","﻿import { Component } from \"@angular/core\";\r\nimport { AdminLoginService } from \"../../services/login.service\";\r\nimport { Router } from \"@angular/router\";\r\n/* import { ToastsManager } from 'ng2-toastr/ng2-toastr'; */\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"login.component.html\",\r\n  providers: [AdminLoginService]\r\n})\r\nexport class LoginComponent {\r\n  login: any = {};\r\n  reg: any = {};\r\n  loading = false;\r\n  regclick = false;\r\n\r\n\r\n  constructor(\r\n    public adminLoginService: AdminLoginService,\r\n    public router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  loginUser() {\r\n    this.loading = true;\r\n    this.adminLoginService.adminLogin(this.login).subscribe(\r\n      data => {\r\n        this.login = {};\r\n        this.loading = false;\r\n        this.router.navigate([\"/app/dashboard\"]);\r\n      },\r\n      error => {\r\n        this.loading = false;\r\n        this.toastr.error(error);\r\n      }\r\n    );\r\n  }\r\n  openReg(){\r\n    this.regclick = !this.regclick;\r\n  }\r\n\r\n  regUser(){\r\n    this.loading = true;\r\n    this.adminLoginService.registration(this.reg).subscribe(\r\n      data => {\r\n        this.reg = {};\r\n        this.loading = false;\r\n        this.router.navigate([\"/\"]);\r\n        this.openReg();\r\n      },\r\n      error => {\r\n        this.loading = false;\r\n        this.toastr.error(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nconst loginRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(loginRoutes)\r\n  ],\r\n  declarations: [ LoginComponent ]\r\n})\r\nexport class LoginModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map'\r\nimport { Observable } from 'rxjs';\r\nimport { AppSettings } from '../helpers';\r\nimport { Login } from '../models/login';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AdminLoginService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    adminLogin(login: Login): Observable<any> {\r\n        return this.http.post<any>(AppSettings.API_ENDPOINT + 'admin/login', login)\r\n            .map(response => {\r\n                localStorage.setItem('token', response.result.user.token);\r\n                localStorage.setItem('isLoggedIn', \"true\");\r\n                localStorage.setItem('username', response.result.user.username);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    registration(reg: any): Observable<any> {\r\n        return this.http.post<any>(AppSettings.API_ENDPOINT + 'registration', reg)\r\n            .map(response => {\r\n                return response;\r\n            });\r\n    }\r\n}\r\n"],"sourceRoot":""}